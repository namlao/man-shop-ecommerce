spring.application.name=CartService
server.port=8085

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

spring.datasource.url=jdbc:h2:mem:carts
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

spring.datasource.username=sa
spring.datasource.password=

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

logging.level.feign=DEBUG
logging.level.com.man.CartService.client: DEBUG

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# CircuitBreaker config  Nếu 50% request lỗi trong 10 lần gần nhất → breaker Open → chặn request trong 10s.
resilience4j.circuitbreaker.instances.productService.register-health-indicator=true
resilience4j.circuitbreaker.instances.productService.sliding-window-size=10
resilience4j.circuitbreaker.instances.productService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.productService.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.productService.permitted-number-of-calls-in-half-open-state=3

resilience4j.circuitbreaker.instances.userService.register-health-indicator=true
resilience4j.circuitbreaker.instances.userService.sliding-window-size=5
resilience4j.circuitbreaker.instances.userService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.userService.wait-duration-in-open-state=10s

# Retry config  Khi call lỗi → thử lại tối đa 3 lần, mỗi lần cách nhau 2s.
resilience4j.retry.instances.productService.max-attempts=3
resilience4j.retry.instances.productService.wait-duration=2s

resilience4j.retry.instances.userService.max-attempts=3
resilience4j.retry.instances.userService.wait-duration=2s





